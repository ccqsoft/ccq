#include <stdio.h>
#include <stdlib.h>
#include <string.h>

EXEC SQL BEGIN DECLARE SECTION;
    varchar username[20];
    varchar password[20];
    varchar OraConnName[20];
    int     h_ymd[256];
    char    h_data[256][20];
    char    h_select[256];
    int     i;
EXEC SQL END DECLARE SECTION;


EXEC SQL INCLUDE SQLCA;


/*******************************************************************************
 *  01.関数名         : coco_ConnDb()
 *  02.プロセス名     : 共通処理
 *  03.処理概要       : データベース接続
 *
 ******************************************************************************/
int coco_ConnDb(
){
    /* Oracle接続 */
    strcpy(username.arr,"SMB");
    username.len=strlen(username.arr);
    strcpy(password.arr,"SMB");
    password.len=strlen(password.arr);
    strcpy(OraConnName.arr, "SPDB" );
    OraConnName.len=strlen("OraConnName.arr");

    printf("\nConnected to ORACLE as user %s.\n", username.arr);

    EXEC SQL CONNECT :username IDENTIFIED BY :password  USING :OraConnName;
    if( sqlca.sqlcode == 0 ) {
            printf("Conn OK\n");
    } else {
            printf("Conn ERROR\n");
    }

    /* 例外宣言 */
    //

    return 0;
}

/*******************************************************************************
 *  01.関数名         : coco_DisconnDb()
 *  02.プロセス名     : 共通処理
 *  03.処理概要       : データベース切断
 *
 ******************************************************************************/
int coco_DisconnDb(
){

    EXEC SQL ROLLBACK WORK RELEASE;

    printf("RELEASE OK\n");
    return 0;
}


/*******************************************************************************
 *  01.関数名         : gv01_004_GetProcessInfo()
 *  02.プロセス名     : 共通処理
 *  03.処理概要       : データ取得
 *
 ******************************************************************************/
void gv01_004_GetProcessInfo
(
){
    strcpy(h_select, "select to_char(SYSDATE, 'YYYYMMDDHHMMSS') from SYS.DUAL");
    EXEC SQL PREPARE SQL1 FROM :h_select;
    EXEC SQL DECLARE CUR1 CURSOR FOR SQL1;
    EXEC SQL OPEN CUR1;
    EXEC SQL FETCH CUR1 INTO h_data;
    EXEC SQL CLOSE CUR1;

    printf("h_data[0] = %s\n", h_data[0]);

}
